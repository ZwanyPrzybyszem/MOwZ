@model MOwZProject.Models.ProblemLiu
@{
    ViewBag.Title = "Algorytm statyczny Liu-Laylanda";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h2>@ViewBag.Title</h2>
    <hr />
    <h3 style="color:dodgerblue">@ViewBag.Message</h3>
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <table>
            <tr>
                <th>
                </th>
                <th>
                    @Html.LabelFor(m => m.Tasks[0].Duration)
                </th>
                <th>
                    @Html.LabelFor(m => m.Tasks[0].Period)
                </th>
            </tr>
            @for (int i = 0; i < Model.Tasks.Count(); i++)
            {
                <tr>
                    <th>
                        @Html.DisplayFor(m => m.Tasks[i].Id)
                    </th>
                    <th>
                        @Html.TextBoxFor(m => m.Tasks[i].Duration)
                    </th>
                    <th>
                        @Html.TextBoxFor(m => m.Tasks[i].Period)
                    </th>
                </tr>
            }
        </table>

        <br />
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Dodaj nowy stan" class="btn btn-default" name="add" />
        </div>



        <br />

        @Html.CheckBoxFor(m => m.details)
        @Html.LabelFor(m => m.details)
        <br />
        <input type="submit" value="Przetwórz dane" class="btn btn-primary" name="process" />

    </div>
}

<!------------------------------------------------------>
@if (Model.Iterations != null && Model.Iterations.Count > 0)
{
    <br />
    <br />

    string tasks = string.Join(" ", Model.Iterations.Select(s => s.Task.Id).ToArray());
    string starts = string.Join(" ", Model.Iterations.Select(s => s.Start).ToArray());
    string stops = string.Join(" ", Model.Iterations.Select(s => s.Stop).ToArray());

    <img src="@Url.Action("GanttChart", "Problem", new { tasks = @tasks, starts = @starts, stops = @stops })" />

    <br />

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Iterations.First().Task.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Iterations.First().Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Iterations.First().Stop)
            </th>
        </tr>
        @foreach (var item in Model.Iterations)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Task.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Start)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stop)
                </td>
            </tr>

        }

    </table>

}

@if (Model.details && Model.Steps != null)
{
    <br />
    <p>Kroki algorytmu: </p>

    <table class="table">
        @{
    int i = 0;
    foreach (var item in Model.Steps)
    {
        i++;
        <tr>
            <td>
                @i .
            </td>
            <td>
                @Html.DisplayFor(modelItem => item)
            </td>

        </tr>

    }
        }

    </table>
}




